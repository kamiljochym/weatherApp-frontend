{"ast":null,"code":"var _jsxFileName = \"/home/kamil/projects/portfolio/weather-app/weather-frontend/src/components/AutoCompleteResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport '../App.css';\nimport axios from \"axios\";\nimport poweredByGoogle from './powered_by_google_on_white_hdpi.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AutoCompleteResults = _ref => {\n  _s();\n\n  let {\n    autocomplete\n  } = _ref;\n  const [temp, setTemp] = useState(0);\n  const [forecastData, setForecastData] = useState();\n\n  const sendCoordinates = term => {\n    const toSend = {\n      name: term\n    };\n    console.log(toSend);\n    axios.post('http://localhost:3001/coords', toSend).then(response => {\n      console.log(response);\n      setTemp(response.data.hourly.length);\n      setForecastData(response.data);\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [autocomplete.map((term, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autocompleteTerm\",\n      onClick: () => sendCoordinates(term),\n      children: term\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poweredByGoogle\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: poweredByGoogle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AutoCompleteResults, \"KzvX+Kb4KdsxPbTMHL1/S0+m2JQ=\");\n\n_c = AutoCompleteResults;\nexport default AutoCompleteResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoCompleteResults\");","map":{"version":3,"sources":["/home/kamil/projects/portfolio/weather-app/weather-frontend/src/components/AutoCompleteResults.js"],"names":["React","useState","axios","poweredByGoogle","AutoCompleteResults","autocomplete","temp","setTemp","forecastData","setForecastData","sendCoordinates","term","toSend","name","console","log","post","then","response","data","hourly","length","catch","error","map","idx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;;;;AAGA,MAAMC,mBAAmB,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAACC,IAAAA;AAAD,GAAmB;AAE5C,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAAEO,YAAF,EAAgBC,eAAhB,IAAoCR,QAAQ,EAAlD;;AAEA,QAAMS,eAAe,GAAIC,IAAD,IAAU;AAE9B,UAAMC,MAAM,GAAG;AACXC,MAAAA,IAAI,EAAEF;AADK,KAAf;AAGAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAV,IAAAA,KAAK,CACAc,IADL,CACU,8BADV,EAC0CJ,MAD1C,EAEKK,IAFL,CAEUC,QAAQ,IAAI;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAX,MAAAA,OAAO,CAACW,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBC,MAAtB,CAAP;AACAZ,MAAAA,eAAe,CAACS,QAAQ,CAACC,IAAV,CAAf;AACH,KANL,EAOKG,KAPL,CAOWC,KAAK,IAAIT,OAAO,CAACC,GAAR,CAAYQ,KAAZ,CAPpB;AAUH,GAhBD;;AAkBA,sBACI;AAAA,eACGlB,YAAY,CAACmB,GAAb,CAAiB,CAACb,IAAD,EAAOc,GAAP,kBAChB;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,OAAO,EAAE,MAAMf,eAAe,CAACC,IAAD,CAAhE;AAAA,gBAAyEA;AAAzE;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAIE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAK,QAAA,GAAG,EAAER;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADJ;AAUH,CAjCD;;GAAMC,mB;;KAAAA,mB;AAmCN,eAAeA,mBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport '../App.css';\nimport axios from \"axios\";\nimport poweredByGoogle from './powered_by_google_on_white_hdpi.png'\n\n\nconst AutoCompleteResults = ({autocomplete}) => {\n\n    const [ temp, setTemp ] = useState(0)\n    const [ forecastData, setForecastData ] = useState()\n\n    const sendCoordinates = (term) => {\n\n        const toSend = {\n            name: term\n        }\n        console.log(toSend);\n        axios\n            .post('http://localhost:3001/coords', toSend)\n            .then(response => {\n                console.log(response)\n                setTemp(response.data.hourly.length)\n                setForecastData(response.data)\n            })\n            .catch(error => console.log(error))\n\n\n    }\n\n    return (\n        <>\n          {autocomplete.map((term, idx) => (\n            <div className=\"autocompleteTerm\" onClick={() => sendCoordinates(term)}>{term}</div>\n          ))}\n          <div className=\"poweredByGoogle\">\n              <img src={poweredByGoogle}></img>\n          </div>\n        </>\n    )\n}\n\nexport default AutoCompleteResults;\n\n"]},"metadata":{},"sourceType":"module"}