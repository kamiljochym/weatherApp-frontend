{"ast":null,"code":"var _jsxFileName = \"/home/kamil/projects/portfolio/weather-app/weather-frontend/src/components/Filter.js\";\nimport React from \"react\";\nimport AutoCompleteResults from \"./AutoCompleteResults\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Filter = _ref => {\n  let {\n    handleNewSearch,\n    autocomplete,\n    showAutocomplete\n  } = _ref;\n\n  //These two show or hide the autocomplete search terms if input is in focus or not\n  const handleFocusOn = () => {\n    showAutocomplete = true;\n    console.log(\"focus\");\n  };\n\n  const handleFocusOff = () => {\n    showAutocomplete = false;\n    console.log(\"not focused\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleNewSearch,\n      onFocus: handleFocusOn,\n      onBlur: handleFocusOff\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), showAutocomplete ? /*#__PURE__*/_jsxDEV(AutoCompleteResults, {\n      autocomplete: autocomplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/home/kamil/projects/portfolio/weather-app/weather-frontend/src/components/Filter.js"],"names":["React","AutoCompleteResults","Filter","handleNewSearch","autocomplete","showAutocomplete","handleFocusOn","console","log","handleFocusOff"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAO,YAAP;;;;AAEA,MAAMC,MAAM,GAAG,QAAuD;AAAA,MAAtD;AAACC,IAAAA,eAAD;AAAkBC,IAAAA,YAAlB;AAAgCC,IAAAA;AAAhC,GAAsD;;AAGlE;AACA,QAAMC,aAAa,GAAG,MAAM;AACxBD,IAAAA,gBAAgB,GAAG,IAAnB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,GAHD;;AAKA,QAAMC,cAAc,GAAG,MAAM;AACzBJ,IAAAA,gBAAgB,GAAG,KAAnB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAO,MAAA,QAAQ,EAAEL,eAAjB;AAAkC,MAAA,OAAO,EAAEG,aAA3C;AAA0D,MAAA,MAAM,EAAEG;AAAlE;AAAA;AAAA;AAAA;AAAA,YADJ,EAGKJ,gBAAgB,gBACjB,QAAC,mBAAD;AAAqB,MAAA,YAAY,EAAED;AAAnC;AAAA;AAAA;AAAA;AAAA,YADiB,gBAEf,qCALN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAzBD;;KAAMF,M;AA2BN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport AutoCompleteResults from \"./AutoCompleteResults\";\nimport '../App.css'\n\nconst Filter = ({handleNewSearch, autocomplete, showAutocomplete}) => {\n\n\n    //These two show or hide the autocomplete search terms if input is in focus or not\n    const handleFocusOn = () => {\n        showAutocomplete = true\n        console.log(\"focus\");\n    }\n\n    const handleFocusOff = () => {\n        showAutocomplete = false\n        console.log(\"not focused\");\n    }\n\n    return (\n        <div className=\"searchBar\">\n            <input onChange={handleNewSearch} onFocus={handleFocusOn} onBlur={handleFocusOff}/>\n\n            {showAutocomplete ? \n            <AutoCompleteResults autocomplete={autocomplete}/>\n            : <></>\n            }\n\n        </div>\n    )\n}\n\nexport default Filter;\n\n"]},"metadata":{},"sourceType":"module"}