{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/kamil/projects/portfolio/weather-app/weather-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/home/kamil/projects/portfolio/weather-app/weather-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.scss';import React,{useState}from'react';import axios from'axios';import Filter from'./components/Filter';import Forecast from'./components/Forecast';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),autocomplete=_useState2[0],setAutocomplete=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showAutocomplete=_useState4[0],setShowAutocomplete=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),forecastData=_useState6[0],setForecastData=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),locationName=_useState8[0],setLocationName=_useState8[1];var handleNewSearch=function handleNewSearch(event){var searchName=event.target.value.toLowerCase();if(searchName===''){setShowAutocomplete(false);return;}else{//Gets top 5 search results from back end\naxios.get(\"/autocomplete/\".concat(searchName)).then(function(response){var data=response.data.predictions;var predictions=[];var _iterator=_createForOfIteratorHelper(data),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var term=_step.value;predictions.push(term.description);console.log(term);}}catch(err){_iterator.e(err);}finally{_iterator.f();}setShowAutocomplete(true);setAutocomplete(predictions);}).catch(function(error){console.log(error);});}};var sendCoordinates=function sendCoordinates(term){var toSend={name:term};console.log(toSend);axios.post('/coords',toSend).then(function(response){console.log(response);setForecastData(response.data);setLocationName(term);}).catch(function(error){return console.log(error);});};var handleFocusOn=function handleFocusOn(){setShowAutocomplete(true);};var handleFocusOff=function handleFocusOff(){setTimeout(function(){setShowAutocomplete(false);},100);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"searchBox\",children:/*#__PURE__*/_jsx(Filter,{handleNewSearch:handleNewSearch,autocomplete:autocomplete,showAutocomplete:showAutocomplete,sendCoordinates:sendCoordinates,handleFocusOff:handleFocusOff,handleFocusOn:handleFocusOn})}),/*#__PURE__*/_jsx(Forecast,{forecastData:forecastData,locationName:locationName})]});}export default App;","map":{"version":3,"sources":["/home/kamil/projects/portfolio/weather-app/weather-frontend/src/App.js"],"names":["React","useState","axios","Filter","Forecast","App","autocomplete","setAutocomplete","showAutocomplete","setShowAutocomplete","forecastData","setForecastData","locationName","setLocationName","handleNewSearch","event","searchName","target","value","toLowerCase","get","then","response","data","predictions","term","push","description","console","log","catch","error","sendCoordinates","toSend","name","post","handleFocusOn","handleFocusOff","setTimeout"],"mappings":"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","sourcesContent":["import './App.scss';\nimport React, {useState} from 'react';\nimport axios from 'axios'\n\nimport Filter from './components/Filter'\nimport Forecast from './components/Forecast';\n\nfunction App() {\n\n  const [ autocomplete, setAutocomplete ] = useState([])\n  const [ showAutocomplete, setShowAutocomplete ] = useState(false)\n  const [ forecastData, setForecastData ] = useState()\n  const [ locationName, setLocationName ] = useState()\n \n\n  const handleNewSearch = (event) => {\n\n    const searchName = event.target.value.toLowerCase();\n\n    if (searchName === '') {\n      setShowAutocomplete(false)\n      return;\n    }\n    else {\n      //Gets top 5 search results from back end\n      axios\n        .get(`/autocomplete/${searchName}`)\n        .then(response => {\n          const data = response.data.predictions\n\n          const predictions = []\n          for (let term of data) {\n            predictions.push(term.description)\n            console.log(term);\n\n          }\n          setShowAutocomplete(true)\n          setAutocomplete(predictions)\n        \n        })\n        .catch(error => {\n          console.log(error);\n        })\n    }\n  }\n  \n  const sendCoordinates = (term) => {\n\n    const toSend = {\n        name: term\n    }\n    console.log(toSend);\n    axios\n        .post('/coords', toSend)\n        .then(response => {\n            console.log(response)\n            setForecastData(response.data)\n            setLocationName(term)\n        })\n        .catch(error => console.log(error))\n  }  \n\n  const handleFocusOn = () => {\n    setShowAutocomplete(true)\n  }\n\n  const handleFocusOff = () => {\n    setTimeout(() => {\n      setShowAutocomplete(false)\n    }, 100)\n  }\n\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"searchBox\">\n\n        <Filter handleNewSearch={handleNewSearch} autocomplete={autocomplete} \n        showAutocomplete={showAutocomplete} sendCoordinates={sendCoordinates}\n        handleFocusOff={handleFocusOff} handleFocusOn={handleFocusOn}/>\n                \n      </div>\n      <Forecast forecastData={forecastData} locationName={locationName}/>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}