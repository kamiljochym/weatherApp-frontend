{"ast":null,"code":"var _jsxFileName = \"/home/kamil/projects/portfolio/weather-app/weather-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Filter from './components/Filter';\nimport DisplayCountries from './components/DisplayCountries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [countriesToDisplay, setCountriesToDisplay] = useState([]); // useEffect(() => {\n  //   axios\n  //     .get('https://restcountries.com/v3.1/all')\n  //     .then(response => {\n  //       setCountries(response.data)\n  //       setCountriesToDisplay(response.data)\n  //       console.log(response.data);\n  //     })\n  // }, [])\n\n  const handleNewSearch = event => {\n    const google_maps_api_key = process.env.GOOGLE_MAPS_API_KEY;\n    const searchName = event.target.value.toLowerCase();\n    axios.get(`https://maps.googleapis.com/maps/api/place/autocomplete/json?\n            input=${searchName}&types=establishment&location=37.76999%2C-122.44696&radius=500&key=${google_maps_api_key}`); // .then(response => {\n    //   console.log(JSON.stringify(response.data));\n    // })\n    //   if (searchName === '') { \n    //       setCountriesToDisplay(countries)\n    //     return;\n    //   }\n    //   const filteredCountries = countries.filter(country => country.name.common.toLowerCase().includes(searchName))\n    //   setCountriesToDisplay(filteredCountries)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      handleNewSearch: handleNewSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayCountries, {\n      countries: countriesToDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fHTbxbXhGtSYEDacUNmsCNiWOzc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kamil/projects/portfolio/weather-app/weather-frontend/src/App.js"],"names":["React","useState","useEffect","axios","Filter","DisplayCountries","App","countries","setCountries","countriesToDisplay","setCountriesToDisplay","handleNewSearch","event","google_maps_api_key","process","env","GOOGLE_MAPS_API_KEY","searchName","target","value","toLowerCase","get"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,EAAD,CAA5D,CAHa,CAKb;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,QAAMU,eAAe,GAAIC,KAAD,IAAW;AACjC,UAAMC,mBAAmB,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAxC;AAEA,UAAMC,UAAU,GAAGL,KAAK,CAACM,MAAN,CAAaC,KAAb,CAAmBC,WAAnB,EAAnB;AAEAjB,IAAAA,KAAK,CACFkB,GADH,CACQ;AACZ,oBAAoBJ,UAAW,sEAAqEJ,mBAAoB,EAFpH,EALiC,CAQ/B;AACA;AACA;AAGJ;AACA;AACA;AACA;AACA;AACA;AACC,GAnBD;;AAqBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,MAAD;AAAQ,MAAA,eAAe,EAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE,QAAC,gBAAD;AAAkB,MAAA,SAAS,EAAEF;AAA7B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAhDQH,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios'\n\nimport Filter from './components/Filter'\nimport DisplayCountries from './components/DisplayCountries';\n\nfunction App() {\n\n  const [countries, setCountries] = useState([])\n  const [countriesToDisplay, setCountriesToDisplay] = useState([])\n\n  // useEffect(() => {\n  //   axios\n  //     .get('https://restcountries.com/v3.1/all')\n  //     .then(response => {\n  //       setCountries(response.data)\n  //       setCountriesToDisplay(response.data)\n  //       console.log(response.data);\n        \n  //     })\n    \n  // }, [])\n\n  const handleNewSearch = (event) => {\n    const google_maps_api_key = process.env.GOOGLE_MAPS_API_KEY\n\n    const searchName = event.target.value.toLowerCase();\n\n    axios\n      .get(`https://maps.googleapis.com/maps/api/place/autocomplete/json?\n            input=${searchName}&types=establishment&location=37.76999%2C-122.44696&radius=500&key=${google_maps_api_key}`,)\n      // .then(response => {\n      //   console.log(JSON.stringify(response.data));\n      // })\n\n\n  //   if (searchName === '') { \n  //       setCountriesToDisplay(countries)\n  //     return;\n  //   }\n  //   const filteredCountries = countries.filter(country => country.name.common.toLowerCase().includes(searchName))\n  //   setCountriesToDisplay(filteredCountries)\n  }\n\n  return (\n    <div>\n      <h3></h3>\n\n      <Filter handleNewSearch={handleNewSearch}/>\n\n      <DisplayCountries countries={countriesToDisplay}/>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}