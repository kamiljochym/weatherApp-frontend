{"ast":null,"code":"var _jsxFileName = \"/home/kamil/projects/portfolio/weather-app/weather-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Filter from './components/Filter';\nimport Forecast from './components/Forecast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [autocomplete, setAutocomplete] = useState([]);\n  const [showAutocomplete, setShowAutocomplete] = useState(false);\n  const [forecastData, setForecastData] = useState();\n\n  const handleNewSearch = event => {\n    const searchName = event.target.value.toLowerCase();\n\n    if (searchName === '') {\n      setShowAutocomplete(false);\n      return;\n    } else {\n      //Gets top 5 search results from back end\n      axios.get(`http://localhost:3001/autocomplete/${searchName}`).then(response => {\n        const data = response.data.predictions;\n        const predictions = [];\n\n        for (let term of data) {\n          predictions.push(term.description);\n          console.log(term);\n        }\n\n        setShowAutocomplete(true);\n        setAutocomplete(predictions);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const sendCoordinates = term => {\n    const toSend = {\n      name: term\n    };\n    console.log(toSend);\n    axios.post('http://localhost:3001/coords', toSend).then(response => {\n      console.log(response);\n      setForecastData(response.data);\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBox\",\n      children: [/*#__PURE__*/_jsxDEV(Filter, {\n        handleNewSearch: handleNewSearch,\n        autocomplete: autocomplete,\n        showAutocomplete: showAutocomplete,\n        sendCoordinates: sendCoordinates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        forecastData: forecastData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oXyo6ObCYZ4aC/ktTyPCUjB/WkQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kamil/projects/portfolio/weather-app/weather-frontend/src/App.js"],"names":["React","useState","axios","Filter","Forecast","App","autocomplete","setAutocomplete","showAutocomplete","setShowAutocomplete","forecastData","setForecastData","handleNewSearch","event","searchName","target","value","toLowerCase","get","then","response","data","predictions","term","push","description","console","log","catch","error","sendCoordinates","toSend","name","post"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAEO,gBAAF,EAAoBC,mBAApB,IAA4CR,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAAES,YAAF,EAAgBC,eAAhB,IAAoCV,QAAQ,EAAlD;;AAGA,QAAMW,eAAe,GAAIC,KAAD,IAAW;AAEjC,UAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,WAAnB,EAAnB;;AAEA,QAAIH,UAAU,KAAK,EAAnB,EAAuB;AACrBL,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA;AACD,KAHD,MAIK;AACH;AACAP,MAAAA,KAAK,CACFgB,GADH,CACQ,sCAAqCJ,UAAW,EADxD,EAEGK,IAFH,CAEQC,QAAQ,IAAI;AAChB,cAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcC,WAA3B;AAEA,cAAMA,WAAW,GAAG,EAApB;;AACA,aAAK,IAAIC,IAAT,IAAiBF,IAAjB,EAAuB;AACrBC,UAAAA,WAAW,CAACE,IAAZ,CAAiBD,IAAI,CAACE,WAAtB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAED;;AACDd,QAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAF,QAAAA,eAAe,CAACe,WAAD,CAAf;AAED,OAdH,EAeGM,KAfH,CAeSC,KAAK,IAAI;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,OAjBH;AAkBD;AACF,GA7BD;;AA+BA,QAAMC,eAAe,GAAIP,IAAD,IAAU;AAEhC,UAAMQ,MAAM,GAAG;AACXC,MAAAA,IAAI,EAAET;AADK,KAAf;AAGAG,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACA7B,IAAAA,KAAK,CACA+B,IADL,CACU,8BADV,EAC0CF,MAD1C,EAEKZ,IAFL,CAEUC,QAAQ,IAAI;AACdM,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAT,MAAAA,eAAe,CAACS,QAAQ,CAACC,IAAV,CAAf;AACH,KALL,EAMKO,KANL,CAMWC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CANpB;AAQH,GAdC;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAEE,QAAC,MAAD;AAAQ,QAAA,eAAe,EAAEjB,eAAzB;AAA0C,QAAA,YAAY,EAAEN,YAAxD;AACA,QAAA,gBAAgB,EAAEE,gBADlB;AACoC,QAAA,eAAe,EAAEsB;AADrD;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,QAAD;AAAU,QAAA,YAAY,EAAEpB;AAAxB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAnEQL,G;;KAAAA,G;AAqET,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\nimport axios from 'axios'\n\nimport Filter from './components/Filter'\nimport Forecast from './components/Forecast';\n\nfunction App() {\n\n  const [ autocomplete, setAutocomplete ] = useState([])\n  const [ showAutocomplete, setShowAutocomplete ] = useState(false)\n  const [ forecastData, setForecastData ] = useState()\n \n\n  const handleNewSearch = (event) => {\n\n    const searchName = event.target.value.toLowerCase();\n\n    if (searchName === '') {\n      setShowAutocomplete(false)\n      return;\n    }\n    else {\n      //Gets top 5 search results from back end\n      axios\n        .get(`http://localhost:3001/autocomplete/${searchName}`)\n        .then(response => {\n          const data = response.data.predictions\n\n          const predictions = []\n          for (let term of data) {\n            predictions.push(term.description)\n            console.log(term);\n\n          }\n          setShowAutocomplete(true)\n          setAutocomplete(predictions)\n        \n        })\n        .catch(error => {\n          console.log(error);\n        })\n    }\n  }\n  \n  const sendCoordinates = (term) => {\n\n    const toSend = {\n        name: term\n    }\n    console.log(toSend);\n    axios\n        .post('http://localhost:3001/coords', toSend)\n        .then(response => {\n            console.log(response)\n            setForecastData(response.data)\n        })\n        .catch(error => console.log(error))\n\n}  \n\n  return (\n    <div className=\"container\">\n      <h3></h3>\n      <div className=\"searchBox\">\n\n        <Filter handleNewSearch={handleNewSearch} autocomplete={autocomplete} \n        showAutocomplete={showAutocomplete} sendCoordinates={sendCoordinates}/>\n                \n        <Forecast forecastData={forecastData} />\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}