{"ast":null,"code":"var _jsxFileName = \"/home/kamil/projects/portfolio/weather-app/weather-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Filter from './components/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [autocomplete, setAutocomplete] = useState([]);\n\n  const handleNewSearch = event => {\n    const searchName = event.target.value.toLowerCase();\n\n    if (searchName === '') {\n      return;\n    } else {\n      //Gets top 5 search results from back end\n      axios.get(`http://localhost:3001/autocomplete/${searchName}`).then(response => {\n        const data = response.data.predictions;\n        const predictions = [];\n\n        for (let term of data) {\n          predictions.push(term.description);\n        }\n\n        setAutocomplete(predictions);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBox\",\n      children: [/*#__PURE__*/_jsxDEV(Filter, {\n        handleNewSearch: handleNewSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), autocomplete.map((term, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: term\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eQRZ/QLYQmkLz1SslJSI1UhV740=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kamil/projects/portfolio/weather-app/weather-frontend/src/App.js"],"names":["React","useState","axios","Filter","App","autocomplete","setAutocomplete","handleNewSearch","event","searchName","target","value","toLowerCase","get","then","response","data","predictions","term","push","description","catch","error","console","log","map","idx"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;;AAIA,QAAMM,eAAe,GAAIC,KAAD,IAAW;AAEjC,UAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,WAAnB,EAAnB;;AAEA,QAAIH,UAAU,KAAK,EAAnB,EAAuB;AACrB;AACD,KAFD,MAGK;AACH;AACAP,MAAAA,KAAK,CACFW,GADH,CACQ,sCAAqCJ,UAAW,EADxD,EAEGK,IAFH,CAEQC,QAAQ,IAAI;AAChB,cAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcC,WAA3B;AAEA,cAAMA,WAAW,GAAG,EAApB;;AACA,aAAK,IAAIC,IAAT,IAAiBF,IAAjB,EAAuB;AACrBC,UAAAA,WAAW,CAACE,IAAZ,CAAiBD,IAAI,CAACE,WAAtB;AACD;;AACDd,QAAAA,eAAe,CAACW,WAAD,CAAf;AAED,OAXH,EAYGI,KAZH,CAYSC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAdH;AAeD;AAIF,GA5BD;;AA8BA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAEE,QAAC,MAAD;AAAQ,QAAA,eAAe,EAAEf;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFF,EAIGF,YAAY,CAACoB,GAAb,CAAiB,CAACP,IAAD,EAAOQ,GAAP,kBAChB;AAAA,kBAAMR;AAAN;AAAA;AAAA;AAAA;AAAA,cADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAlDQd,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\nimport axios from 'axios'\n\nimport Filter from './components/Filter'\n\nfunction App() {\n\n  const [ autocomplete, setAutocomplete ] = useState([])\n\n  \n\n  const handleNewSearch = (event) => {\n\n    const searchName = event.target.value.toLowerCase();\n\n    if (searchName === '') {\n      return;\n    }\n    else {\n      //Gets top 5 search results from back end\n      axios\n        .get(`http://localhost:3001/autocomplete/${searchName}`)\n        .then(response => {\n          const data = response.data.predictions\n\n          const predictions = []\n          for (let term of data) {\n            predictions.push(term.description)\n          }\n          setAutocomplete(predictions)\n        \n        })\n        .catch(error => {\n          console.log(error);\n        })\n    }\n\n\n    \n  }\n\n  return (\n    <div className=\"container\">\n      <h3></h3>\n      <div className=\"searchBox\">\n\n        <Filter handleNewSearch={handleNewSearch}/>\n        \n        {autocomplete.map((term, idx) => (\n          <div>{term}</div>\n        ))}\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}